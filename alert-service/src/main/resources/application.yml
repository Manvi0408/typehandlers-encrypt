server:
  port: 8082

spring:
  application:
    name: alert-service
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/alert_service_db
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres123}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1800000
      connection-timeout: 30000
  
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
  
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
  
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:admin}
    password: ${RABBITMQ_PASSWORD:admin123}
    virtual-host: /
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 3
          multiplier: 2
  
  cloud:
    config:
      uri: ${CONFIG_SERVICE_URL:http://localhost:8888}
      fail-fast: true
  
  sleuth:
    zipkin:
      base-url: ${ZIPKIN_URL:http://localhost:9411}
    sampler:
      probability: 1.0

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVICE_URL:http://localhost:8761/eureka}
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.womensafety.alertservice: DEBUG
    org.springframework.cloud.openfeign: DEBUG
    org.hibernate.SQL: DEBUG

# Alert Configuration
alert:
  emergency:
    auto-escalation-time: 300000 # 5 minutes in milliseconds
    max-response-time: 900000 # 15 minutes in milliseconds
    priority-levels:
      - CRITICAL
      - HIGH
      - MEDIUM
      - LOW
    
  notification:
    retry-attempts: 3
    retry-delay: 30000 # 30 seconds
    channels:
      - SMS
      - EMAIL
      - PUSH
      - CALL
    
  geofence:
    default-radius: 1000 # meters
    max-radius: 5000 # meters
    min-radius: 100 # meters

# WebSocket Configuration
websocket:
  endpoint: "/ws"
  allowed-origins: "*"
  sockjs:
    enabled: true
    heartbeat-time: 25000

# External Services
external-services:
  user-service:
    url: lb://user-service
  location-service:
    url: lb://location-service
  contact-service:
    url: lb://contact-service
  notification-service:
    url: lb://notification-service

# Cache Configuration
cache:
  alert:
    ttl: 3600 # 1 hour
  user:
    ttl: 1800 # 30 minutes

# OpenAPI Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
  info:
    title: Alert Service API
    description: Women Safety Platform - Emergency Alert Management API
    version: 1.0.0
    contact:
      name: Women Safety Platform Team
      email: support@womensafety.com